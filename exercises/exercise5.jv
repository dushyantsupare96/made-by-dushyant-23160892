pipeline DataPipeline {

    ZipExtractor
        -> DataFilePicking
        -> DataTextFileInterpreting
        -> DataCSVInterpreting
        -> DataTableInterpreting
        -> DataLoading;


    block ZipExtractor oftype GTFSExtractor {
        url: "https://gtfs.rhoenenergie-bus.de/GTFS.zip";
    }


    block DataFilePicking oftype FilePicker {
        path: "/stops.txt";
    }


    block DataTextFileInterpreting oftype TextFileInterpreter { 
        encoding: 'latin2';
    }
    

    block DataCSVInterpreting oftype CSVInterpreter {
        delimiter: ",";
        enclosing: '"';
    }


    block DataTableInterpreting oftype TableInterpreter {
        header: true;
        columns: [
            "stop_id" oftype integer,
            "stop_name" oftype text,
            "stop_lat" oftype ValidLatitudeLongitude,
            "stop_lon" oftype ValidLatitudeLongitude,
            "zone_id" oftype ZoneIdFilter,
        ];
    }


valuetype ZoneIdFilter oftype integer {
    constraints: [ ZoneIdValue ];
}


constraint ZoneIdValue on integer:
    value == 1645;


    block DataLoading oftype SQLiteLoader {
        table: "stops";
        file: "./gtfs.sqlite";
    }


valuetype ValidLatitudeLongitude oftype decimal {
    constraints: [
        ValidCoordinates,
    ];
}


constraint ValidCoordinates oftype RangeConstraint {
lowerBound: -90;
upperBound: 90;
}
}